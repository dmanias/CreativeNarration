<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8d3e52d6-901c-4cf0-ae28-2f9730bba7a9" name="Changes" comment="remove apikey from config" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.21.5" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiProvider">{
  &quot;contexts&quot;: [
    {
      &quot;name&quot;: &quot;kind-ardan-starter-cluster&quot;
    }
  ],
  &quot;isMigrated&quot;: true
}</component>
  <component name="KubernetesSettings">
    <option name="contextName" value="kind-ardan-starter-cluster" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2cPZqQqrKqhkzU29e8xrKq4djp9" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "Docker.deployments/Dockerfile.executor": "Run",
    "Go Build.go build github.com/dmanias/creativenarration/app (1).executor": "Run",
    "Go Build.go build github.com/dmanias/creativenarration/app.executor": "Run",
    "Go Test.TestAPIAskQuestion in github.com/dmanias/creativenarration/app.executor": "Run",
    "Go Test.TestAskAI in github.com/dmanias/creativenarration/app/ai.executor": "Run",
    "Go Test.TestAskAIIntegration in ai_test.go.executor": "Run",
    "Go Test.TestAskAIIntegration in github.com/dmanias/creativenarration/app/ai.executor": "Run",
    "Go Test.TestHandleAsk in github.com/dmanias/creativenarration/app.executor": "Run",
    "Go Test.TestLoadConfig in github.com/dmanias/creativenarration/app.executor": "Run",
    "Go Test.TestRunServerFailure in github.com/dmanias/creativenarration/app.executor": "Run",
    "Go Test.ai_test.go.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/dimos/Desktop/dev/creativenarration/app/config",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.goide.configuration.GoLibrariesConfigurableProvider"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app/config" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app" />
      <recent name="$PROJECT_DIR$/app/ai/config" />
    </key>
  </component>
  <component name="RunManager">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/dmanias/creativenarration/app" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$/app" />
      <kind value="DIRECTORY" />
      <package value="github.com/dmanias/creativenarration/app" />
      <directory value="$PROJECT_DIR$/app" />
      <filePath value="$PROJECT_DIR$/app/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestAPIAskQuestion in github.com/dmanias/creativenarration/app" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$/app" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/dmanias/creativenarration/app" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAPIAskQuestion\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestAskAIIntegration in ai_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$/app/ai" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/app/ai/ai_test.go" />
      <framework value="gotest" />
      <pattern value="^\QTestAskAIIntegration\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestAskAIIntegration in github.com/dmanias/creativenarration/app/ai" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$/app/ai" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/dmanias/creativenarration/app/ai" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAskAIIntegration\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="ai_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="creativenarration" />
      <working_directory value="$PROJECT_DIR$/app/ai" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/app/ai/ai_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="deployments/Dockerfile: Compose Deployment" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="deployments/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.deployments/Dockerfile: Compose Deployment" />
      <item itemvalue="Go Build.go build github.com/dmanias/creativenarration/app" />
      <item itemvalue="Go Test.TestAskAIIntegration in ai_test.go" />
      <item itemvalue="Go Test.ai_test.go" />
      <item itemvalue="Go Test.TestAPIAskQuestion in github.com/dmanias/creativenarration/app" />
      <item itemvalue="Go Test.TestAskAIIntegration in github.com/dmanias/creativenarration/app/ai" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.deployments/Dockerfile: Compose Deployment" />
        <item itemvalue="Go Test.TestAPIAskQuestion in github.com/dmanias/creativenarration/app" />
        <item itemvalue="Go Test.TestAskAIIntegration in ai_test.go" />
        <item itemvalue="Go Test.ai_test.go" />
        <item itemvalue="Go Test.TestAskAIIntegration in github.com/dmanias/creativenarration/app/ai" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="create config files" />
    <MESSAGE value="Fix warnings" />
    <MESSAGE value="Add sonarlint" />
    <MESSAGE value="Fix conf.Parse prefix" />
    <MESSAGE value="test cfg and port" />
    <MESSAGE value="vendoring and docker" />
    <MESSAGE value="gitignore" />
    <MESSAGE value="remove apikey from config" />
    <option name="LAST_COMMIT_MESSAGE" value="remove apikey from config" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>